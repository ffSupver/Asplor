

plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {


	maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	maven { url = "https://mvn.devos.one/releases/" } // Porting Lib Releases
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port   网址raw.githubusercontent.com/Fuzss/modresources/main/maven/无法访问导致报错
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
	maven { url = "https://maven.tterrag.com/" } // Flywheel


	maven { url = "https://maven.shedaniel.me" }
	maven {
		name = "ModMaven"
		url = "https://modmaven.dev/"
		// For Gradle 5.1 and above, limit it to just AE2
		content {
			includeGroup 'appeng'
		}
	}


	maven {
		name "Team Resourceful"
		url "https://maven.teamresourceful.com/repository/maven-public/"
	}
	maven {
		name= "Terrarium"
		url ="https://maven.terraformersmc.com"
	}



//	maven {
//		// location of the maven that hosts JEI files before January 2023
//		name = "Progwml6's maven"
//		url = "https://dvs1.progwml6.com/files/maven/"
//	}
//	maven {
//		// location of the maven that hosts JEI files since January 2023
//		name = "Jared's maven"
//		url = "https://maven.blamejared.com/"
//	}
//	maven {
//		// location of a maven mirror for JEI files, as a fallback
//		name = "ModMaven"
//		url = "https://modmaven.dev"
//	}


	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	//加载flywheel
	modImplementation("com.jozufozu.flywheel:flywheel-fabric-1.20.1:0.6.10-2") {
		transitive = true
	}

	modImplementation("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// 添加 Cloth Config 依赖项
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:10.0.96"


	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}"
	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"


	//AE2
	modCompileOnly "appeng:appliedenergistics2-fabric:${ae2_version}"
	modRuntimeOnly(files("libs/appliedenergistics2-fabric-15.2.12.jar"))

	//模组菜单
	modRuntimeOnly files("libs/modmenu-7.2.2.jar")

	// Ad Astra - Required
	modImplementation files("build-dependencies/botarium-fabric-1.20.1-2.3.1.jar")  //？
	modImplementation files("build-dependencies/ad_astra-fabric-1.20.1-1.15.18.jar")  //？
	modImplementation ("teamreborn:energy:2.2.0") { exclude(group: "net.fabricmc.fabric-api") }
//	modImplementation ("earth.terrarium.botarium:botarium-fabric-${minecraft_version}:${botarium_version}")  { transitive = false }
//	modImplementation "earth.terrarium.adastra:ad_astra-fabric-${minecraft_version}:${adAstra_version}"
	modImplementation "com.teamresourceful.resourcefullib:resourcefullib-fabric-${minecraft_version}:${resourcefullib_version}"
	modImplementation "com.teamresourceful.resourcefulconfig:resourcefulconfig-fabric-${minecraft_version}:${resourcefulconfig_version}"




}

processResources {
	Map<String, String> properties = Map.of(
			"version", version,
			"create_version", create_version,
			"minecraft_version", minecraft_version
	) as Map<String, String>
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}



java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

